{
    transactions: {
        [userId]: {
            [transactionId]: {
                account: string,
                card: string,
                categorized: boolean,
                date: Date object,
                descriptions: string,
                id: string,
                matchCategory: boolean,
                category: string, //categoryId
                subCategory: string, //subCategoryId
                deposit: number,
                withdrawl: number
            }
        }
    }

    

    categories: {
        [userId]: {
            [categoryId]:{
                name: string,
                id: string,
                subCatgories: {
                    [subCategoryId]: {
                        name: string,
                        id:string
                    }
                }
            }
        }
    }
    

    categories: {
        [userId] :[
            id: string,
            name: string,
            subCategories: [
                id: string,
                name:string
            ]
        ]
    }
    users: {
        [userId]:{
            email: string,
            firstName: string,
            lastName: string,
            roles: [string],
            uid: string
        }
    }
    messages: {
        [messageId]:{
            createdAt: ??,
            text: string,
            userId: string
        }
    }
}





categories: {
    [categoryId]:{
        name: string,
        id: string,
        subCatgories: {
            [subCategoryId]: {
                name: string,
                id:string
            }
        }
    }
}

params: categoryId, subCategoryId

create new category: newCategories = Object.assign({},{...categories}, {newCategory})
read one category: oneCategory = categories[categoryId]
update one category: newCategories = Object.assign({}, {...categories}, {updatedCategory})
delete one category: {category.id, ...newCategories} = categories
iterate: Object.keys(categories).forEach(category=>categories[category])
create new subCategory:
read one subCategory:
update one subCategory:
delete one subCategory:
iterate subCategories:



OR?

categories:[
    id: string,
    name: string,
    subCategories: [
        id: string,
        name:string
    ]
]
create: newCategories = [...categories, newCategory]
read one category: oneCategory = categories.filter(category=>category.id===id)
update: newCategories = categories.filter(category=>category.id !== oldId).concat(updatedCategory);
delete: newCategories = categories.filter(category=>category.id !== oldId)
iterate: categories.forEach(category=>category)
create new subCategory:
read one subCategory:
update one subCategory:
delete one subCategory:
iterate subCategories: